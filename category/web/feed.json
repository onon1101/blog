{
    "version": "https://jsonfeed.org/version/1",
    "title": "meow • All posts by \"web\" category",
    "description": "早安>.<",
    "home_page_url": "http://onon1101.github.io",
    "items": [
        {
            "id": "http://onon1101.github.io/2023/05/06/web/network/no2/",
            "url": "http://onon1101.github.io/2023/05/06/web/network/no2/",
            "title": "No.2 DMZ 非軍事化區",
            "date_published": "2023-05-05T16:55:35.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>這篇是我在寫 <code>網路安全</code> 的時候有的一個疑問，什麼是 DMZ 在我設定的部分，跟她的理念好像兜不攏。記得那時候因為內網有 Openwrt, 所以為了要把全部的 port 開放，只看到了可以用 DMZ, 沒有深入理解她的原理，今天就是來還債的。</p>\n<h2 id=\"dmz\"><a class=\"markdownIt-Anchor\" href=\"#dmz\">#</a> DMZ</h2>\n<p>全稱 Demilitarized Zone (非軍事化區域), 從字面上理解是攻擊者和管理者都不會去攻擊或者管理的區域，因此她有以下的幾個特點。<br>\n- DMZ 是與內網完全隔離<br>\n - 內網與外網都可以訪問 DMZ 區域，但是 DMZ 並不能訪問外網和內網。<br>\n- 通常都放一些被攻擊不太會受影響的資料<br>\n<img data-src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/6f/DMZ_network_diagram_1_firewall.svg/1200px-DMZ_network_diagram_1_firewall.svg.png\" alt></p>\n<p>可是簡單來說，通常比較建議使用 port forwarding, 一方面是家用 router 的 DMZ 比不上十幾萬的防火牆設備，一方面是 port 全部打開是不太安全的。</p>\n<h2 id=\"port-forwarding-與-dmz-的優先權\"><a class=\"markdownIt-Anchor\" href=\"#port-forwarding-與-dmz-的優先權\">#</a> port forwarding 與 DMZ 的優先權</h2>\n<p>通常 port 的優先權為如下：DMZ - 非軍事區 &gt; Virtual Server - 虛擬主機 &gt; IP Forwording&gt;Special Application</p>\n<h2 id=\"reference\"><a class=\"markdownIt-Anchor\" href=\"#reference\">#</a> Reference</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjU2Mzk2OC9hcnRpY2xlL2RldGFpbHMvMTA4Nzg5NTg4\">CDNA</span></li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "http://onon1101.github.io/2023/05/05/web/hexo/no4/",
            "url": "http://onon1101.github.io/2023/05/05/web/hexo/no4/",
            "title": "Step 4. 使用SEO",
            "date_published": "2023-05-05T10:00:35.000Z",
            "content_html": "<h2 id=\"什麼是seo\"><a class=\"markdownIt-Anchor\" href=\"#什麼是seo\">#</a> 什麼是 SEO</h2>\n<p>SEO 的全稱是 Search Engine Optimization (搜索引擎優化), 目的在於能讓 google 搜索到你的網站，如果不使用的話，在 google 上面就沒辦法搜索到你的網站。因此需要挑整設定。</p>\n<h2 id=\"怎麼開始\"><a class=\"markdownIt-Anchor\" href=\"#怎麼開始\">#</a> 怎麼開始</h2>\n<p>首先我們先進入這個<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZWFyY2guZ29vZ2xlLmNvbS9zZWFyY2gtY29uc29sZS9hYm91dA==\">網站</span>。並且選擇只控制子網域的部分。</p>\n<p><img data-src=\"1.jpg\" alt></p>\n<p>然後這邊我們提交 html 的方式。<br>\n把他的 html 下載下來並且放到我們的 hexo  <code>hexo-folder/soure/</code>  資料夾底下，並且我們需要修改裡面的內容。<br>\n<img data-src=\"2.jpg\" alt></p>\n<p>假設你的 html 裡面寫的是…, 此時我們需要增加一個項目。 <code>layout: false</code> , 不然 google 並沒有辦法驗證。</p>\n<figure class=\"highlight txt\"><figcaption data-lang=\"txt\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>google-site-verification: googlec66a365c7dc45f00.html</pre></td></tr></table></figure><figure class=\"highlight txt\"><figcaption data-lang=\"txt\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>---</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>layout: false</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>---</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>google-site-verification: googlec66a365c7dc45f00.html</pre></td></tr></table></figure><p>此時別忘記了</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo cl</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$ hexo g <span class=\"token parameter variable\">-d</span></pre></td></tr></table></figure><p>當做到這裡就可以驗證 google page 了。</p>\n<hr>\n<h2 id=\"sitmap\"><a class=\"markdownIt-Anchor\" href=\"#sitmap\">#</a> sitmap</h2>\n<p>先下載這個</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-generator-sitemap <span class=\"token parameter variable\">--save</span></pre></td></tr></table></figure><p>再來去我們的網頁裡面新增 sitmap, 在這邊我們輸入 sitemap.xml。</p>\n<p><img data-src=\"4.jpg\" alt></p>\n<p>然後我現在做到這一步，後面應該要等他跑了。等一天吧？<br>\n 在我等了 2 個小時之後他就跑出來了。</p>\n<p>而這邊有一個問題是他的 icon 並沒有跑出來，查了一下發現他需要遵守一些規則。</p>\n<p><img data-src=\"3.jpg\" alt></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXJzLmdvb2dsZS5jb20vc2VhcmNoL2RvY3MvYXBwZWFyYW5jZS9mYXZpY29uLWluLXNlYXJjaD92aXNpdF9pZD0yMTY4MzI4MDUyMTQ0Mi04Njg5NjA2MjU4MzUwMDI5Njk5JmFtcDtyZD0xJmFtcDtobD16aC10dw==\">google 的規則</span>寫這樣說。而我們從規則裡面可以看到一方面他須要 html 還有 icon 大小。而我的問題在於大小不符合。因此我們可以調整一下。</p>\n<p>在 shodax 的資料夾裡面 <code>hexo-theme-shokax\\layout\\_partials\\head</code> , 的 head.pug 就可以看的出來。</p>\n<figure class=\"highlight pug\"><figcaption data-lang=\"pug\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\">link<span class=\"token attributes\"><span class=\"token punctuation\">(</span><span class=\"token attr-name\">rel</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\"><span class=\"token string\">\"icon\"</span> type<span class=\"token operator\">=</span><span class=\"token string\">\"image/ico\"</span> sizes<span class=\"token operator\">=</span><span class=\"token string\">\"48x48\"</span> href<span class=\"token operator\">=</span><span class=\"token function\">url_for</span><span class=\"token punctuation\">(</span>theme<span class=\"token punctuation\">.</span><span class=\"token property-access\">statics</span> <span class=\"token operator\">+</span>  theme<span class=\"token punctuation\">.</span><span class=\"token property-access\">assets</span> <span class=\"token operator\">+</span> theme<span class=\"token punctuation\">.</span><span class=\"token property-access\">icon</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">favicon</span></span><span class=\"token punctuation\">)</span></span></span>)</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token flow-control\"><span class=\"token branch keyword\">if</span> theme<span class=\"token punctuation\">.</span><span class=\"token property-access\">icon</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">apple_touch_icon</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\">link<span class=\"token attributes\"><span class=\"token punctuation\">(</span><span class=\"token attr-name\">rel</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\"><span class=\"token string\">\"apple-touch-icon\"</span> sizes<span class=\"token operator\">=</span><span class=\"token string\">\"180x180\"</span> href<span class=\"token operator\">=</span><span class=\"token function\">url_for</span><span class=\"token punctuation\">(</span>theme<span class=\"token punctuation\">.</span><span class=\"token property-access\">statics</span> <span class=\"token operator\">+</span>  theme<span class=\"token punctuation\">.</span><span class=\"token property-access\">assets</span> <span class=\"token operator\">+</span> theme<span class=\"token punctuation\">.</span><span class=\"token property-access\">icon</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">apple_touch_icon</span></span><span class=\"token punctuation\">)</span></span></span>)</pre></td></tr></table></figure><p><img data-src=\"5.jpg\" alt></p>\n<p>至此我在等一下下，順便聊一下為什麼需要更改 icon, 一方面是比較好看，另外一方面可以增加 SSEO 的評分，畢竟網站的分數越高，他的排名會越前面。</p>\n",
            "tags": [
                "hexo"
            ]
        },
        {
            "id": "http://onon1101.github.io/2023/04/22/web/network/no1/",
            "url": "http://onon1101.github.io/2023/04/22/web/network/no1/",
            "title": "No.1 什麼是SSL/TSL",
            "date_published": "2023-04-22T13:08:55.000Z",
            "content_html": "<h2 id=\"啥\"><a class=\"markdownIt-Anchor\" href=\"#啥\">#</a> 啥</h2>\n<p>SSL/TLS 是一種安全加密協議，主要保護兩溝通端，溝通過程，以及確保身分不會被冒充。<br>\n在最一開始由 SSL 先被提出來可以參考以下…</p>\n<blockquote>\n<p>1994 年，NetScape 公司设计了 SSL 协议（Secure Sockets Layer）的 1.0 版，但是未发布。</p>\n<p>1995 年，NetScape 公司发布 SSL 2.0 版，很快发现有严重漏洞。</p>\n<p>1996 年，SSL 3.0 版问世，得到大规模应用。</p>\n<p>1999 年，互联网标准化组织 ISOC 接替 NetScape 公司，发布了 SSL 的升级版 TLS 1.0 版。</p>\n<p>2006 年和 2008 年，TLS 进行了两次升级，分别为 TLS 1.1 版和 TLS 1.2 版。最新的变动是 2011 年 TLS 1.2 的修订版。</p>\n</blockquote>\n<p>參考資料：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubGl4bC5jbi8yMDIxLzA2MjA0ODAxNy5odG1sI3RvYy1oZWFkaW5nLTE=\">https://www.lixl.cn/2021/062048017.html#toc-heading-1</span></p>\n<p>SSL/TLS 可以用在 https, SMTP, FTP…</p>\n<p><img data-src=\"https://pic.lixl.cn/2020/v2-d050edfb2dbf0501562764efc4a001a3_1440w.jpg\" alt></p>\n<h2 id=\"啥是憑證\"><a class=\"markdownIt-Anchor\" href=\"#啥是憑證\">#</a> 啥是憑證</h2>\n<p>憑證是一種可以被信任的證書，為什麼它可以被信任。由於他是由雙方都可以信任的第三方所發放的證書，所以當我看到這一份證書時，就可以確認他沒有被偽裝。簡單來說，只要證書可信，公鑰就是可信的。</p>\n<h2 id=\"運作過程\"><a class=\"markdownIt-Anchor\" href=\"#運作過程\">#</a> 運作過程</h2>\n<p>http 由於是明文的傳輸，因此需要一種方法確保溝通中的安全，也就是採取 SSL/TLS 的技術。</p>\n<p>在參考資料中有說道，明文傳輸有三個大風險</p>\n<ul>\n<li>竊聽風險（eavesdropping） : 雙方溝通的內容可以被竊聽</li>\n<li>竄改風險（tampering）     : 雙方隨時可以隨時竄改通信內容，當別人穿送資料的時候，再一次確認卻不承認有傳送資料的這件事</li>\n<li>冒充風險（pretending）    : 雙方隨時可以被其他人冒充</li>\n</ul>\n<p>在加密中可以確保三樣安全性</p>\n<ul>\n<li>加密傳輸：在加密過程中，不會被其他人監聽</li>\n<li>身分證書：不會被客戶端或者伺服器端不會被其他人偽裝</li>\n<li>校驗內容：在溝通時就會發現資料被竄改</li>\n</ul>\n<ol>\n<li>\n<p>竊聽 (eavesdrop)<br>\n 竊聽指的是當我和其他人溝通的時候，有人在竊聽我們之間的溝通內容。這樣會導致我們被偷走了資料還不知道。</p>\n<p>而解決的方式是用加密的方式溝通，只有傳輸雙方知道的內容才會避免。</p>\n</li>\n</ol>\n<p><img data-src=\"005334.jpg\" alt></p>\n<ol start=\"2\">\n<li>\n<p>欺騙 (spoofing) 以及攢改 (falsification)<br>\n 意旨 A 傳輸給 B 時，沒辦法確定是否 B 為第三方的偽裝，這個是欺騙。當 A 傳輸給 B 的時候，實際上是傳給第三方再傳給 B, 這樣稱為竄改。</p>\n<p>解決的方法必須用數位簽章還有訊息鑑別馬的方式。<br>\n<img data-src=\"005418.jpg\" alt><br>\n<img data-src=\"005451.jpg\" alt></p>\n</li>\n<li>\n<p>抵賴 (repudiation)<br>\n 抵賴意旨說當 A 傳給 B 資料時，再確認的時候卻說 A 並沒有傳輸，造成可以竄改通信內容。</p>\n<p>解決還是用數位簽章的方式。<br>\n<img data-src=\"005517.jpg\" alt></p>\n</li>\n</ol>\n<h2 id=\"tls-的架構\"><a class=\"markdownIt-Anchor\" href=\"#tls-的架構\">#</a> TLS 的架構</h2>\n<p>TLS 可以分層兩層，底下那層紀錄下第一次溝通所確定使用的一些資料比如加密方法，然後使用對稱密碼對資料進行加密。<br>\n上層可以分成四個部分：握手協議，密碼規格變更協議，警告協議，應用數據協議。</p>\n<ul>\n<li>握手協議：在第一次溝通時，雙方商議密碼算法並且共享密鑰，證書認證之類的…</li>\n<li>密碼規格變更協議：跟傳送變更密碼方式</li>\n<li>警告協議：當有警告訊息時，傳送給對方</li>\n<li>應用數據協議：將負責由 TLS 要乘載的資料加密，並傳送。</li>\n</ul>\n<p><img data-src=\"v2-74138889aeea5dbdfdcb4970caeaf5a2_1440w.png\" alt></p>\n<h2 id=\"tls中-公鑰與會話金鑰session-key有甚麼樣的關係\"><a class=\"markdownIt-Anchor\" href=\"#tls中-公鑰與會話金鑰session-key有甚麼樣的關係\">#</a> TLS 中，公鑰與會話金鑰 (session key) 有甚麼樣的關係</h2>\n<p>公鑰是放在公開的地方，因此要怎麼確認公鑰確實代表我們要傳送的端點。通常公鑰會隨副一份憑證，而憑證是由雙方可信任的第三方所產生的，並且她是唯一的。</p>\n<p>而公私鑰採用的是非對稱加密，如果溝通的資料都是透過如此傳輸，效率會非常的慢。因此公鑰是拿來產生 session key 後，雙方在用 session key 去溝通，每一次溝通都會重新產生一組，而且他們是對稱的加密方法，固然會快很多。</p>\n<p>所謂的握手階段指的是：</p>\n<blockquote>\n<ol>\n<li>客戶端向伺服器端索取公鑰</li>\n<li>雙方協商會話密鑰</li>\n</ol>\n</blockquote>\n<h2 id=\"握手階段\"><a class=\"markdownIt-Anchor\" href=\"#握手階段\">#</a> 握手階段</h2>\n<p>握手階段有四個階段，在雙方溝通的過程中，都是明文的方式。<br>\n<img data-src=\"bg2014020502.png\" alt></p>\n<h3 id=\"1-客戶端發出連線請求\"><a class=\"markdownIt-Anchor\" href=\"#1-客戶端發出連線請求\">#</a> 1. 客戶端發出連線請求</h3>\n<p>客戶端送給伺服器會有這些訊息</p>\n<figure class=\"highlight txt\"><figcaption data-lang=\"txt\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>客戶端能使用的SSL/TLS 1.0, 1.1 or 1.2溝通協議</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> 給一個自己生成的隨機數, 之後產生session key 使用</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> 可以支持的加密方式, RSA 或其他非對稱加密方式。</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> 支持壓縮方式</pre></td></tr></table></figure><p>資料說這邊客戶端並不會傳送目的端的域名，所以一台伺服器只能有一個憑證。</p>\n<h3 id=\"2-伺服器端回應客戶端請求\"><a class=\"markdownIt-Anchor\" href=\"#2-伺服器端回應客戶端請求\">#</a> 2. 伺服器端回應客戶端請求</h3>\n<p>伺服器傳送給客戶端這些訊息</p>\n<figure class=\"highlight txt\"><figcaption data-lang=\"txt\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>確認使用的SSL/TLS溝通協議, 如果不支持的話就結束通話。</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> 生成一個隨機數, 用於對話加密</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> 確認使用的加密方式</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> 伺服器憑證</pre></td></tr></table></figure><p>資料說有時候還會在這邊要求客戶端提供 &quot;客戶端證書&quot;, 確保伺服器只對某些用戶提供服務。</p>\n<h3 id=\"3-客戶端回應\"><a class=\"markdownIt-Anchor\" href=\"#3-客戶端回應\">#</a> 3. 客戶端回應</h3>\n<p>如果伺服器的憑證並不是可被信任的，就會通知使用者是否要繼續溝通。</p>\n<figure class=\"highlight txt\"><figcaption data-lang=\"txt\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>再產生一個隨機數, 並用伺服器公鑰加密</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> 溝通方式需要改變, 代表後面的溝通都用雙方溝通的加密方式對話。</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> 發送hash 代表握手階段結束, 並且也是前面發送所有內容的hash, 用來給伺服器較驗</pre></td></tr></table></figure><h3 id=\"4-伺服器回應\"><a class=\"markdownIt-Anchor\" href=\"#4-伺服器回應\">#</a> 4. 伺服器回應</h3>\n<figure class=\"highlight txt\"><figcaption data-lang=\"txt\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>溝通方式確認改變, 確認收到之後都用加密方式對話</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> 通知握手結束, 也是前面所有內容的hash值</pre></td></tr></table></figure><p>在這之後就是 Http 的溝通範圍了，完全交給他了。不過在溝通的過程中都會使用 session key 對話。</p>\n<p>以上握手部分都是參考這個<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubGl4bC5jbi8yMDIxLzA2MjA0ODAxNy5odG1s\">網站</span></p>\n<hr>\n<h2 id=\"reference\"><a class=\"markdownIt-Anchor\" href=\"#reference\">#</a> Reference</h2>\n<p>讀者有興趣可以到以下網站了解更多。</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucHVtby5jb20udHcvc2VjdXJpdHkvc3NsL3NzbC5qc3Ajb25l\">no.1</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9uZXdzLmdhbmRpLm5ldC96aC1oYW50LzIwMjIvMDIvd2hhdHMtdGhlLWRpZmZlcmVuY2UtYmV0d2Vlbi1zc2wtYW5kLXRscy8=\">no.2</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubGl4bC5jbi8yMDIxLzA2MjA0ODAxNy5odG1s\">no.3</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaHViby5pby9odHRwcy8jc2Vzc2lvbi1rZXktJUU2JTlDJTgzJUU4JUE5JUIxJUU1JUFGJTg2JUU5JTkxJUIwLSVFNiU5OCVBRiVFNCVCQiU4MCVFOSVCQSVCQw==\">no.4</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY2xvdWRmbGFyZS5jb20vemgtY24vbGVhcm5pbmcvc3NsL3doYXQtaXMtYS1zZXNzaW9uLWtleS8=\">no.5</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdXBwb3J0LnVuZXRob3N0LmNvbS9pbmRleC5waHA/cnA9L2tub3dsZWRnZWJhc2UvODIvU1NMU1NMLWNlcnRpZmljYXRlLmh0bWw=\">no.6</span></li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "http://onon1101.github.io/2023/04/08/web/hexo/theme-hexo/",
            "url": "http://onon1101.github.io/2023/04/08/web/hexo/theme-hexo/",
            "title": "Step 3. 給 hexo 套一層酷酷的外皮(shokax)",
            "date_published": "2023-04-08T14:50:35.000Z",
            "content_html": "<h2 id=\"說明\"><a class=\"markdownIt-Anchor\" href=\"#說明\">#</a> 說明</h2>\n<p>預設的 hexo 皮是非常醜的，因此我們可以再原有的基礎上加入 theme, 就能使它變得非常好看。<br>\n我所使用的 theme 是<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3prejA5OC9oZXhvLXRoZW1lLXNob2thWA==\"> hexo-theme-shokaX</span><br>\n 但由於 shokaX 的說明資料非常凌亂，因此這邊會大致統整一下</p>\n<h2 id=\"安裝\"><a class=\"markdownIt-Anchor\" href=\"#安裝\">#</a> 安裝</h2>\n<p>hexo 是可以安裝 theme, 簡單來說就是給他套一層皮。這個皮膚是由四個中國人寫的。然後她的安裝方式跟其他的 theme 可能不太一樣，並不是直接拉到 hexo 的 theme 資料夾就好。我覺得安裝可能不太會有問題，這邊就不細說了。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">npm</span> i shokax-cli <span class=\"token parameter variable\">--location</span><span class=\"token operator\">=</span>global <span class=\"token comment\"># 初始化 init 環境</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$ SXC <span class=\"token function\">install</span> shokaX</pre></td></tr></table></figure><blockquote>\n<p>安裝完成之後應該就可以看到 網頁的風格 有改變了。<br>\n安裝 shokax 的方法跟一般的安裝方式有點不同，不能將 github 的專案直接放進去 <code>./themes/</code>  的資料夾<br>\n他必須用自己的 SXC 安裝套件安裝。</p>\n</blockquote>\n<h2 id=\"設定檔案\"><a class=\"markdownIt-Anchor\" href=\"#設定檔案\">#</a> 設定檔案</h2>\n<p>大部分關於 shokax 的設定檔案都是存在 <code>&lt;hexo&gt;\\node_modules\\hexo-theme-shokax\\_config.yml</code> , 所以設定檔案有兩份，這邊說一下你可能想知道的設定部分。</p>\n<p>其實他的註解都寫得滿清楚了，由這邊可以看到。<br>\n<img data-src=\"142139.jpg\" alt></p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">experiments</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token punctuation\">...</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">fixedCover</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span> <span class=\"token comment\">#這一項修改主頁面背景圖片</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token punctuation\">...</span></pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hexo new page <span class=\"token string\">\"about\"</span> <span class=\"token comment\">#生成 關於網站</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>hexo new page <span class=\"token string\">\"admiration\"</span> <span class=\"token comment\">#生成 關於作者</span></pre></td></tr></table></figure><h2 id=\"_posts\"><a class=\"markdownIt-Anchor\" href=\"#_posts\">#</a> _posts</h2>\n<p>在資料夾底下  <code>./source/</code>  有一個_posts, 這個是專門放置發文的 markdown 檔案，你可以在這邊編寫完成檔案後，會經由 markdown 的編譯器，並發佈到伺服器上。</p>\n<p>網站範例<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FtZWhpbWUvaGV4by10aGVtZS1zaG9rYS90cmVlL21hc3Rlci9leGFtcGxlL3NvdXJjZS9fcG9zdHM=\"> example-for-hexo</span></p>\n<p>這邊交幾個基礎的語法</p>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token title important\">#!./source/*.md</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">---</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>tag: //文章的 Tag</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>cover: //文章的背景圖片</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>title: 早安//標題</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token title important\">date: 2023-04-08//文章的日期</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">---</span></pre></td></tr></table></figure><p>如果在文章裡面要欠入圖片的話，可以在與頁面相同的目錄下開一個名稱相同的資料夾，裡面才存放圖片就可以了。</p>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>!# test.md</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>![](photo.jpg)</pre></td></tr></table></figure><pre><code>...\n|--test.md\n|--test\n   |--photo.jpg\n...\n</code></pre>\n<h2 id=\"_data\"><a class=\"markdownIt-Anchor\" href=\"#_data\">#</a> _data</h2>\n<p>這個我還不知道是什麼，之後在補。</p>\n<h2 id=\"reference\"><a class=\"markdownIt-Anchor\" href=\"#reference\">#</a> Reference</h2>\n<div class=\"links\"><div class=\"item\" title=\"zkz098\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3prejA5OC9oZXhvLXRoZW1lLXNob2thWA==\" data-background-image=\"/assets/404.png\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3prejA5OC9oZXhvLXRoZW1lLXNob2thWA==\">這個是theme 的github</span>\n          <p class=\"desc\">裡面存放著原始文件</p>\n          </div></div><div class=\"item\" title=\"kaitaku\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9kb2NzLmthaXRha3UueHl6L2d1aWRlLw==\" data-background-image=\"/assets/404.png\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9kb2NzLmthaXRha3UueHl6L2d1aWRlLw==\">第一份說明書</span>\n          <p class=\"desc\">裡面只有少少的說明內容</p>\n          </div></div><div class=\"item\" title=\"lostyu\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy8=\" data-background-image=\"/assets/404.png\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy8=\">第二份說明書</span>\n          <p class=\"desc\">裡面的內容就比較詳細了</p>\n          </div></div></div>\n<blockquote>\n<p>PS: 更多的參考資料可以學習 Next 的設定方式，裡面有很多都是類似的。</p>\n</blockquote>\n",
            "tags": [
                "hexo"
            ]
        },
        {
            "id": "http://onon1101.github.io/2023/04/08/web/hexo/use-hexo/",
            "url": "http://onon1101.github.io/2023/04/08/web/hexo/use-hexo/",
            "title": "Step 2. how to use hexo",
            "date_published": "2023-04-08T04:12:30.000Z",
            "content_html": "<h2 id=\"前情提要\"><a class=\"markdownIt-Anchor\" href=\"#前情提要\">#</a> 前情提要</h2>\n<p>上一篇講述了怎麼安裝，現在來說怎麼使用。</p>\n<h1 id=\"指令\"><a class=\"markdownIt-Anchor\" href=\"#指令\">#</a> 指令</h1>\n<h2 id=\"新增文章\"><a class=\"markdownIt-Anchor\" href=\"#新增文章\">#</a> 新增文章</h2>\n<p>! 以下命令都是在 hexo 資料夾中執行。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo new <span class=\"token punctuation\">[</span>layout<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>title<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><blockquote>\n<p>之後可以去到  <code>./source/*.md</code>  裡面就有自己新增的檔案</p>\n</blockquote>\n<h2 id=\"清除垃圾\"><a class=\"markdownIt-Anchor\" href=\"#清除垃圾\">#</a> 清除垃圾</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo clean</pre></td></tr></table></figure><h2 id=\"生成靜態網頁\"><a class=\"markdownIt-Anchor\" href=\"#生成靜態網頁\">#</a> 生成靜態網頁</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo generate</pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo g</pre></td></tr></table></figure><h2 id=\"啟動伺服器\"><a class=\"markdownIt-Anchor\" href=\"#啟動伺服器\">#</a> 啟動伺服器</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo server</pre></td></tr></table></figure><h1 id=\"部屬\"><a class=\"markdownIt-Anchor\" href=\"#部屬\">#</a> 部屬</h1>\n<p>這邊就不贅述要如何把它放到 github 的靜態網站</p>\n<blockquote>\n<p>! 以下命令都是在 hexo 資料夾裡面執行</p>\n</blockquote>\n<h2 id=\"安裝專案放上github的套件\"><a class=\"markdownIt-Anchor\" href=\"#安裝專案放上github的套件\">#</a> 安裝專案放上 Github 的套件</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-deployer-git <span class=\"token parameter variable\">--save</span></pre></td></tr></table></figure><h2 id=\"修改上傳github的設定檔\"><a class=\"markdownIt-Anchor\" href=\"#修改上傳github的設定檔\">#</a> 修改上傳 github 的設定檔</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#! ./_config.yml</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>deploy:</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  type: <span class=\"token function\">git</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  repo: https://github.com/<span class=\"token operator\">&lt;</span>username<span class=\"token operator\">></span>/<span class=\"token operator\">&lt;</span>username<span class=\"token operator\">></span>.github.io.git</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  branch: main //注意這邊要從 master 改成 main</pre></td></tr></table></figure><h2 id=\"開始部屬\"><a class=\"markdownIt-Anchor\" href=\"#開始部屬\">#</a> 開始部屬</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo deploy</pre></td></tr></table></figure><h1 id=\"每一次上傳\"><a class=\"markdownIt-Anchor\" href=\"#每一次上傳\">#</a> 每一次上傳</h1>\n<h2 id=\"部屬指令\"><a class=\"markdownIt-Anchor\" href=\"#部屬指令\">#</a> 部屬指令</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo cl    // 清除之前建立的靜態檔案</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$ hexo g     // 建立靜態頁面</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>$ hexo d     // 部署至 GitHub</pre></td></tr></table></figure><h1 id=\"內容編輯\"><a class=\"markdownIt-Anchor\" href=\"#內容編輯\">#</a> 內容編輯</h1>\n<p>本來我是使用 url 的方式放照片，可缺點是在載入網頁的速度慢，照片顯示受第三方的影響，<br>\n 所以這邊來說一下如何使用本地的方法。</p>\n<p>先安裝一下套件</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> https://github.com/CodeFalling/hexo-asset-image <span class=\"token parameter variable\">--save</span></pre></td></tr></table></figure><p>我們進入_config.yml 設定啟動相對的路徑，把 false 設定為 true</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>post_asset_folder: <span class=\"token boolean\">false</span></pre></td></tr></table></figure><figure class=\"highlight md\"><figcaption data-lang=\"Markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>![](照片的名稱)</pre></td></tr></table></figure><h2 id=\"等待\"><a class=\"markdownIt-Anchor\" href=\"#等待\">#</a> 等待</h2>\n<p>這邊大概等個一，兩分鐘就可以看到這樣的畫面了</p>\n<blockquote>\n<p><code>https://&lt;username&gt;.github.io</code> <br>\n<br><br>\n<img data-src=\"https://i.imgur.com/X0cAUy6.png\" alt></p>\n</blockquote>\n<h1 id=\"reference\"><a class=\"markdownIt-Anchor\" href=\"#reference\">#</a> Reference</h1>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oYWNrbWQuaW8vQEhlaWRpLUxpdS9ub3RlLWhleG8tZ2l0aHVi\">如何安裝 Hexo</span></li>\n</ul>\n",
            "tags": [
                "hexo"
            ]
        },
        {
            "id": "http://onon1101.github.io/2023/04/08/web/hexo/install-hexo/",
            "url": "http://onon1101.github.io/2023/04/08/web/hexo/install-hexo/",
            "title": "Step 1. how to install hexo",
            "date_published": "2023-04-07T21:12:20.000Z",
            "content_html": "<p>為什麼需要 hexo, 並且他的功能是什麼呢。簡單來說，hexo 可以更快速的，並且在維護上也會更方便的一個靜態套件，也可以套入各種的風格。</p>\n<p>而以下會比較粗略的說明要如何安裝 hexo</p>\n<h2 id=\"前置工作\"><a class=\"markdownIt-Anchor\" href=\"#前置工作\">#</a> 前置工作</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub2RlanMub3JnL3poLXR3L2Rvd25sb2Fk\">node.js</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXQtc2NtLmNvbS8=\">git</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL3poLXR3Lw==\">hexo</span></li>\n</ul>\n<h2 id=\"hexo\"><a class=\"markdownIt-Anchor\" href=\"#hexo\">#</a> hexo</h2>\n<ol>\n<li>node 的部分就不贅述，如果有空的話再來補要如何使用 node.js。<br>\n進入 hexo 網頁之後可以看到，一行命令，將他貼到 terminal 並運行他。</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-cli <span class=\"token parameter variable\">-g</span></pre></td></tr></table></figure><ol start=\"2\">\n<li>接下來我們要創建一個有關於 hexo 的資料夾，將來會把所有有關網站的東西都放在 &lt;你的資料夾&gt; 的裡面，你可以選一個風水比較好的資料夾去存放他。</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo init <span class=\"token operator\">&lt;</span>資料夾名稱<span class=\"token operator\">></span></pre></td></tr></table></figure><blockquote>\n<p>其中 &lt;資料夾名稱&gt; 可以更換為你喜歡的名稱<br>\n ex：  <code>hexo init folder</code></p>\n</blockquote>\n<ol start=\"3\">\n<li>初始化作業，我們先進入這個資料夾，並且安裝 npm。</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token builtin class-name\">cd</span> <span class=\"token operator\">&lt;</span>資料夾名稱<span class=\"token operator\">></span></pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span></pre></td></tr></table></figure><p>這樣就完成基本的安裝了</p>\n<h2 id=\"reference\"><a class=\"markdownIt-Anchor\" href=\"#reference\">#</a> Reference</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oYWNrbWQuaW8vQEhlaWRpLUxpdS9ub3RlLWhleG8tZ2l0aHVi\">如何安裝 Hexo</span></li>\n</ul>\n<blockquote>\n<p>所有關於如何安裝 hexo, 以及後續維護的參考資料。</p>\n</blockquote>\n",
            "tags": [
                "hexo"
            ]
        }
    ]
}