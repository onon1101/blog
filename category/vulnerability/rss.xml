<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>meow • Posts by &#34;vulnerability&#34; category</title>
        <link>http://onon1101.github.io</link>
        <description>早安&gt;.&lt;</description>
        <language>zh-TW</language>
        <pubDate>Mon, 08 May 2023 13:01:00 +0800</pubDate>
        <lastBuildDate>Mon, 08 May 2023 13:01:00 +0800</lastBuildDate>
        <category>hexo</category>
        <category>教學 Discrete-Mathematics</category>
        <category>教學 C/C++</category>
        <item>
            <guid isPermalink="true">http://onon1101.github.io/2023/05/08/network-security/Vulnerability/lecture-6/</guid>
            <title>lecture-6 OS command injection</title>
            <link>http://onon1101.github.io/2023/05/08/network-security/Vulnerability/lecture-6/</link>
            <pubDate>Mon, 08 May 2023 13:01:00 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;前言&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#前言&#34;&gt;#&lt;/a&gt; 前言&lt;/h2&gt;
&lt;p&gt;這個是一個關於 linux 命令的系統注入，可以在一些輸入框注入 linux 命令。&lt;/p&gt;
&lt;h2 id=&#34;pipe&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pipe&#34;&gt;#&lt;/a&gt; pipe (|)&lt;/h2&gt;
&lt;p&gt;把前一個進程執行的結果，輸出到下一個進程。下面的例子是把 nmap 執行完的結果輸出到 notepad。&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;$ nmap &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;ip&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-A&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; notepad&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#&#34;&gt;#&lt;/a&gt; (&amp;amp;)&lt;/h2&gt;
&lt;p&gt;把進程設為後台的進程。&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;$ &lt;span class=&#34;token builtin class-name&#34;&gt;command&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;payload&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#payload&#34;&gt;#&lt;/a&gt; payload&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3BheWxvYWRib3gvY29tbWFuZC1pbmplY3Rpb24tcGF5bG9hZC1saXN0&#34;&gt;檔案&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;命令注入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#命令注入&#34;&gt;#&lt;/a&gt; 命令注入&lt;/h2&gt;
&lt;p&gt;在教學裡面，命令注入一些奇怪的參數後面，至於為什麼那裏可以注入，以及要注入什麼，都是由自己嘗試或者猜出來的，因此這是很困難的在沒有任何的提示之下。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://onon1101.github.io/2023/05/08/network-security/Vulnerability/lecture-5/</guid>
            <title>lecture-5 Directory traversal</title>
            <link>http://onon1101.github.io/2023/05/08/network-security/Vulnerability/lecture-5/</link>
            <pubDate>Mon, 08 May 2023 07:35:00 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;說明&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#說明&#34;&gt;#&lt;/a&gt; 說明&lt;/h2&gt;
&lt;p&gt;抓包之後去找一下那些參數可以被注入的，例如… web 的參數。&lt;/p&gt;
&lt;p&gt;可以利用文件來取得一些本來不能被看到的東西。當網站出現能訪問系統資料夾的漏洞時。我們就可以猜測密碼檔案。&lt;/p&gt;
&lt;p&gt;例如 linux：/etc/passwd, 但有時候並不是放在跟目錄底下。所以有可能是…/etc/passwd, …/…/etc/passwd, 之類的。&lt;br&gt;
但如果是 windows, /WINDOWS/win.ini&lt;/p&gt;
&lt;p&gt;然後再注入的時候可以用 burpsuite 去猜測，而這邊有&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3N3aXNza3lyZXBvL1BheWxvYWRzQWxsVGhlVGhpbmdzL3RyZWUvbWFzdGVyL0ZpbGUlMjBJbmNsdXNpb24=&#34;&gt;字典檔案&lt;/span&gt;，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3htZW5kZXovd2Z1enovYmxvYi9tYXN0ZXIvd29yZGxpc3QvSW5qZWN0aW9ucy9UcmF2ZXJzYWwudHh0&#34;&gt;檔案 2&lt;/span&gt;。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://onon1101.github.io/2023/05/07/network-security/Vulnerability/lecture-4/</guid>
            <title>lecture-4 信息洩漏(Information disclosure)</title>
            <link>http://onon1101.github.io/2023/05/07/network-security/Vulnerability/lecture-4/</link>
            <pubDate>Sun, 07 May 2023 17:46:00 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;前言&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#前言&#34;&gt;#&lt;/a&gt; 前言&lt;/h2&gt;
&lt;p&gt;信息洩漏可能有 phpinfo (), 或者後端用什麼語言寫的，那在低版本是不是會有漏洞。&lt;/p&gt;
&lt;h2 id=&#34;information-disclosure-in-error-messages&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#information-disclosure-in-error-messages&#34;&gt;#&lt;/a&gt; Information disclosure in error messages&lt;/h2&gt;
&lt;p&gt;他要找第三方的框架版本號。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;抓包&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;看網頁底下有什麼的目錄&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;發現什麼都看不到，所以我們查看他版本最快的方法就是讓網頁產生一個錯誤&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;然後我們把 &lt;code&gt;?product=很大的數字&lt;/code&gt; ，然後就可以看到它是用 java 寫的了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;或者我們去看他的腳本或者註釋就能發現版本訊息了。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;source-code-disclosure-via-backup-files&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#source-code-disclosure-via-backup-files&#34;&gt;#&lt;/a&gt; Source code disclosure via backup files&lt;/h2&gt;
&lt;p&gt;他說備份文件洩漏了，而且備份文件裡面有資料庫的密碼。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;robots.txt 就可以看到裡面有 backup 的目錄了&lt;/li&gt;
&lt;li&gt;在進去 backup, 裡面就可以看到密碼了&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;information-disclosure-on-debug-page&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#information-disclosure-on-debug-page&#34;&gt;#&lt;/a&gt; Information disclosure on debug page&lt;/h2&gt;
&lt;p&gt;他說有訊息洩漏在 debug 的頁面，然後密碼洩漏在環境遍量 &lt;code&gt;SECRET_KEY&lt;/code&gt;  裡面。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;先掃描一下目錄，發現有 phpinfo.php 的頁面&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查詢一下他的 &lt;code&gt;SECRET_KEY&lt;/code&gt; , 就能發現，但我們還有第二種方式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;點選 burpsuite 右鍵，找到 engagement tools, 然後 Search, 輸入環境變量就能找到了。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;information-disclosure-in-version-control-histroy&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#information-disclosure-in-version-control-histroy&#34;&gt;#&lt;/a&gt; Information disclosure in version control histroy&lt;/h2&gt;
&lt;p&gt;在 git 的頁面就可以看到。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;authentication-bypass&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#authentication-bypass&#34;&gt;#&lt;/a&gt; Authentication bypass&lt;/h2&gt;
&lt;p&gt;這是一個要偽裝本地原 ip 的題目。作者在想要如何偽裝的時候想用 http 的標頭偽裝，但這個方法失敗了。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;標準答案是用 TRACT 在 TCP 協議方法裡面&lt;/li&gt;
&lt;li&gt;postman 可以用 port 請求的工具&lt;/li&gt;
&lt;li&gt;而他題目裡面因為有自定義的標頭檔案，所以要用 TRACT 的 TCP 協議去查看，並且修改一下。&lt;/li&gt;
&lt;li&gt;將他修改為 127.0.0.1&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://onon1101.github.io/2023/05/07/network-security/Vulnerability/lecture-3/</guid>
            <title>lecture-3 邏輯漏洞</title>
            <link>http://onon1101.github.io/2023/05/07/network-security/Vulnerability/lecture-3/</link>
            <pubDate>Sun, 07 May 2023 15:48:00 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;邏輯漏洞舉例&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#邏輯漏洞舉例&#34;&gt;#&lt;/a&gt; 邏輯漏洞舉例&lt;/h2&gt;
&lt;p&gt;如果 1 件 = 100 元，10 件 = 1000 元，那麼 -1 件 是不是就會是 -100 元。&lt;br&gt;
在分析一個網站的時候，最好把每一個頁面都分析清楚。&lt;/p&gt;
&lt;p&gt;這邊用的靶場就不用 DVWA, 會用&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9wb3J0c3dpZ2dlci5uZXQvd2ViLXNlY3VyaXR5L2FsbC1sYWJz&#34;&gt;這個&lt;/span&gt;。&lt;/p&gt;
&lt;h2 id=&#34;excessive-trust-in-client-side-controls&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#excessive-trust-in-client-side-controls&#34;&gt;#&lt;/a&gt; Excessive trust in client-side controls&lt;/h2&gt;
&lt;p&gt;這邊先用 butpsuite 分析封包，發現他會把價錢和數量都送給後端。因此我們改一下送出去的價錢就好了。&lt;/p&gt;
&lt;h2 id=&#34;high-level-logic-vulnerability&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#high-level-logic-vulnerability&#34;&gt;#&lt;/a&gt; High-level logic vulnerability&lt;/h2&gt;
&lt;p&gt;封包分析完後只能送數量，所以我們送出一個負的數量，他說總共的價格不能小於 0, 因此我們選很多商品讓價格大於 0, 這樣就可以了。&lt;/p&gt;
&lt;h2 id=&#34;low-level-logic-flaw&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#low-level-logic-flaw&#34;&gt;#&lt;/a&gt; Low-level logic flaw&lt;/h2&gt;
&lt;p&gt;在這個實驗中，沒有辦法送負的商品數量，因此思路是用溢出的方式，超過他整數的範圍，讓他溢出到負數的部分，讓他在 1~100 之間。&lt;br&gt;
這次使用到 burpsuite 的自動發送封包，之前都是在 repeater 裡面，把封包送到 Intruder 那邊，用 null payload, 就可以不斷發送封包，因為最大送出的數量是 99, 只好送出很多個 99 數量的封包。&lt;/p&gt;
&lt;h2 id=&#34;inconsistent-handling-of-exceptional-input&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#inconsistent-handling-of-exceptional-input&#34;&gt;#&lt;/a&gt; Inconsistent handling of exceptional input&lt;/h2&gt;
&lt;p&gt;在 burpsuite 要發現一個網站底下的目錄可以用 target-&amp;gt; sitemap -&amp;gt; 右鍵 -&amp;gt; engagement tools -&amp;gt; discover content。&lt;br&gt;
在掃瞄的過程中就可以掃到 admin 目錄了。&lt;/p&gt;
&lt;p&gt;先註冊一遍用戶。而這個頁面有給我們一個信箱，在註冊的時候可以用這個信箱。而註冊之後發現還是沒有辦法進去 admin 的頁面。&lt;/p&gt;
&lt;p&gt;架設我們在註冊的時候把 email 命名的很長，發現他最大只到 255 個字元，因此我們可以把 email 變成這樣： &lt;code&gt;&amp;lt;username&amp;gt;@dontwannacry.com.0aa800ed0436e336805a8b91006900df.web-security-academy.net&lt;/code&gt; 。這樣註冊完成之後再去 username 裡面看，就能發現他只有 &lt;code&gt;&amp;lt;username&amp;gt;@dontwannacry.com&lt;/code&gt; 。實際上在我們應該是要建造一個 &lt;code&gt;dontwannacry.com.0aa800ed0436e336805a8b91006900df.web-security-academy.net&lt;/code&gt;  這樣的郵件服務器，但是這個網站幫我們都處理好了，所以只要在 web-security.net 這裡註冊就好了。&lt;/p&gt;
&lt;p&gt;註冊完成看一下就可以使用 admin 了。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://onon1101.github.io/2023/05/06/network-security/Vulnerability/lecture-2/</guid>
            <title>lecture-2 弱口令或者弱密碼</title>
            <link>http://onon1101.github.io/2023/05/06/network-security/Vulnerability/lecture-2/</link>
            <pubDate>Sat, 06 May 2023 22:19:00 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;什麼是弱口令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#什麼是弱口令&#34;&gt;#&lt;/a&gt; 什麼是弱口令&lt;/h2&gt;
&lt;p&gt;很容易被電腦或者字典檔案猜到，就算他很複雜密碼。&lt;/p&gt;
&lt;h2 id=&#34;hydra&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hydra&#34;&gt;#&lt;/a&gt; hydra&lt;/h2&gt;
&lt;p&gt;這個是 kali linux 內建的一個暴力破解的軟體。其實工具是非常強大的，但能不能破解取決於字典檔強不強大。&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;$ hydra &lt;span class=&#34;token parameter variable&#34;&gt;-L&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;username_file&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-p&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;password_file&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;ip&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;protocol&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;burnsuite&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#burnsuite&#34;&gt;#&lt;/a&gt; burnsuite&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;先把瀏覽器的 proxy server 設定與 burnsuite 一樣，我自己測試的結果如果用 burnsuite 自己的瀏覽器，會出現一些莫名其妙的錯誤。&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-config&#34;&gt;$ 127.0.0.1:8080 #這個是burnsuite預設的port
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;先把 &lt;code&gt;Intercept is on&lt;/code&gt; , 這個是監聽封包的意思。喔對了，因為教學影片裡面是真的打，而我找不到能打的機器，所以用 DVWA 架設了一個。之後有空再教學。&lt;br&gt;
&lt;img data-src=&#34;1.jpg&#34; alt&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;右鍵找到 Intruder, 並點擊。&lt;br&gt;
&lt;img data-src=&#34;2.jpg&#34; alt&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;然後進去。裡面高亮的部分就是暴力破解的部分。如果想要自定義破解，可以選擇 clean, 在點擊兩下，並且 add。會出現他自定義的符號包起來你要破解的地方。&lt;br&gt;
&lt;img data-src=&#34;3.jpg&#34; alt&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;然後選擇攻擊類型。&lt;br&gt;
&lt;img data-src=&#34;4.jpg&#34; alt&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Payloads 選擇。這邊以後有在詳細的介紹。第二個是選擇字典檔案。第三個選擇從字典拿到的密碼要用什麼的加密方式。&lt;br&gt;
&lt;img data-src=&#34;5.jpg&#34; alt&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;不過這邊我們遇到一個問題是，他的長度應該是要變化的，上網搜了一下是轉址的問題。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果 username 和 password 要同時爆破，可以選擇四個模式的不同。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://onon1101.github.io/2023/05/06/network-security/Vulnerability/lecture-1/</guid>
            <title>lecture-1 漏洞挖掘</title>
            <link>http://onon1101.github.io/2023/05/06/network-security/Vulnerability/lecture-1/</link>
            <pubDate>Sat, 06 May 2023 20:36:00 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;前言&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#前言&#34;&gt;#&lt;/a&gt; 前言&lt;/h2&gt;
&lt;p&gt;再查看這個分類之前，應該些去閱讀 detection 的分類。而漏洞的挖掘會用 burpsuite 比較多。所以先說一下怎麼取的 burpsuite 的 pro 版本。&lt;/p&gt;
&lt;h2 id=&#34;下載頁面&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#下載頁面&#34;&gt;#&lt;/a&gt; 下載頁面&lt;/h2&gt;
&lt;p&gt;這邊都是以 kali liunx 為主。&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL1NOR1dOL0J1cnAtU3VpdGU=&#34;&gt;下載連結&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;第一步都是先下載執行檔案 (.sh), 而當中必須要有 keygen.jar 的檔案才行。&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight txt&#34;&gt;&lt;figcaption data-lang=&#34;txt&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;folder&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;|-- Kali_Linux_Setup.sh&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;|-- keygen.jar&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;|-- loader.jar&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;不過在單純執行的 keygen 的時候遇到了一個小問題。沒辦法顯示 java 的程序。&lt;br&gt;
解決的方法我是這樣做&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;root@host$ &lt;span class=&#34;token builtin class-name&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;&lt;span class=&#34;token environment constant&#34;&gt;DISPLAY&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;127.0&lt;/span&gt;.0.1:0.0&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;kali@host$ xhost + &lt;span class=&#34;token comment&#34;&gt;#這邊要在 user 執行&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;access control disabled, clients can connect from any &lt;span class=&#34;token function&#34;&gt;host&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;kali@host$ &lt;span class=&#34;token function&#34;&gt;java&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-jar&lt;/span&gt; kengen.jar&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;root@host$ xhost + &lt;span class=&#34;token comment&#34;&gt;#就會抱錯&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;xhost:  unable to &lt;span class=&#34;token function&#34;&gt;open&lt;/span&gt; display &lt;span class=&#34;token string&#34;&gt;&#34;127.0.0.1:0.0&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;1.jpg&#34; alt&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;先把左邊的 License 貼到 burpsuite 裡面，下一步之後再選擇  &lt;code&gt;Manual actvial&lt;/code&gt; 。&lt;br&gt;
&lt;img data-src=&#34;2.jpg&#34; alt&gt;&lt;/li&gt;
&lt;li&gt;現在會跳出三個格子，把 burpsuite 裡面的請求碼貼到破解軟體的第二格中，之後再把破解軟體的第三格貼到 burpsuite, 至此就完成了。&lt;br&gt;
&lt;img data-src=&#34;4.jpg&#34; alt&gt;&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
    </channel>
</rss>
