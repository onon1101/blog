{
    "version": "https://jsonfeed.org/version/1",
    "title": "meow • All posts by \"hexo\" tag",
    "description": "早安>.<",
    "home_page_url": "http://onon1101.github.io",
    "items": [
        {
            "id": "http://onon1101.github.io/2023/06/03/Artificial-Intelligence/Deep-Learning/no2/",
            "url": "http://onon1101.github.io/2023/06/03/Artificial-Intelligence/Deep-Learning/no2/",
            "title": "No.2 感知機",
            "date_published": "2023-06-03T09:02:00.000Z",
            "content_html": "<h2 id=\"對感知機產生好奇\"><a class=\"markdownIt-Anchor\" href=\"#對感知機產生好奇\">#</a> 對感知機產生好奇</h2>\n<p>在記錄說明機器學習的過程中，也會說明學習的一些思維。<br>\n而作者在說明他對機器學習的了解中，發現他是沒有問題的，但這恰恰是最可怕的，因為對於一個專業項目是停滯不前的。因此她從感知機的底層開始探究起問題。</p>\n<div class=\"note info\">\n<ul>\n<li>\n<p>作者知道神經網路就是在模擬生物的神經系統，且都是由神經元組成，而其能實現多個信號輸入一個信號輸出</p>\n</li>\n<li>\n<p>因此作者提出了一個疑問，神經網路裡面的多對一就是一種樹，那麼跟數學函數裡面的多對一，和數據結構裡面的樹究竟有什麼樣子的差別</p>\n</li>\n</ul>\n</div>\n<p><img data-src=\"3.jpg\" alt><br>\n<img data-src=\"4.jpg\" alt></p>\n<h2 id=\"什麼是感知機\"><a class=\"markdownIt-Anchor\" href=\"#什麼是感知機\">#</a> 什麼是感知機</h2>\n<p>在人類的神經系統裡面有一個基本的單元稱為  <code>神經元</code>  ，在神經網路裡面也有一個基本的單元稱為  <code>感知機</code>  。</p>\n<p><img data-src=\"2.jpg\" alt></p>\n<p>當時有人提出  <code>感知機</code>  有一個缺陷，但從先在神經網路的流行來看，此項問題已經被解決了。因此他的優勢劣勢都被分析的一清二楚了。<br>\n他說感知機能處理很多邏輯運算，例如：AND, OR, NOT。但是有一個解決不了就是  <code>異或運算</code></p>\n<p>感知機是一個用來分類的工具，例如說這邊有一組身高體重的資料，感知機能判斷哪些人是胖的那些人是瘦的。因此感知機是用來做二元判斷的，他只能輸出  <code>1</code>  或者  <code>-1</code>  。</p>\n<p>總體來說，他就是利用每一筆樣本來調整線的位置，在線的上面為 +1 , 在線的下面為 -1 。</p>\n<p><img data-src=\"6.jpg\" alt></p>\n<p>而這個資料只考慮了二維的資料，如果資料的維度到達三維，或者更高維度，那分界線就不再是線，而是一個平面或者 (n-1) 的一個平面。(線性分類)</p>\n<p>因此我就一個疑問，是否分界線一定要是一個線性的函數，能不能是曲線或者不是一個函數<br>\n而其實可以是線性也可以是非線性的，但定義為線性是因為這樣比較好實作與構思，在後面的部分可以疊加多層的感知機來達到曲線的目的</p>\n<p><img data-src=\"7.jpg\" alt></p>\n",
            "tags": [
                "hexo"
            ]
        },
        {
            "id": "http://onon1101.github.io/2023/05/31/Artificial-Intelligence/Deep-Learning/no1/",
            "url": "http://onon1101.github.io/2023/05/31/Artificial-Intelligence/Deep-Learning/no1/",
            "title": "No.1 極大似然估計",
            "date_published": "2023-05-31T09:02:00.000Z",
            "content_html": "<h1 id=\"什麼是似然\"><a class=\"markdownIt-Anchor\" href=\"#什麼是似然\">#</a> 什麼是似然</h1>\n<p>在理解似然的時候常常會看到與他混淆的名詞， <code>機率</code> 。因此要如何區分機率與似然就成了一個滿大的難題。</p>\n<p>機率：給一組模型參數，預測該結果發生的機率<br>\n似然：給一組發生後的結果，分析這組模型參數可能產生這組的結果</p>\n<p>簡單一點說明是，如果今天有一個猜硬幣正反面的遊戲，那麼在還沒猜硬幣的時候，出現正反兩面的 <code>機率</code> 會是 50% 。如果今天使用一個質地不均勻的硬幣，猜 10 次後統計的結果是 <code>正反反反反正反反反正</code> ，那麼請問這組結果在十次裡面出現的可能性是多少，這個就是 <code>似然</code> 。</p>\n",
            "tags": [
                "hexo"
            ]
        },
        {
            "id": "http://onon1101.github.io/2023/05/31/computer-science/Philosophy/no1/",
            "url": "http://onon1101.github.io/2023/05/31/computer-science/Philosophy/no1/",
            "title": "No.1 感知機",
            "date_published": "2023-05-31T09:02:00.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>為什麼會接觸到 “第一性原則” 是因為我在研究機器學習的時候，一位大老在說明他的思考路徑，有人留言說這是一種 “第一性原則” 的思考方式。於是開始好奇什麼是第一性原則。</p>\n<h2 id=\"三種思考方式\"><a class=\"markdownIt-Anchor\" href=\"#三種思考方式\">#</a> 三種思考方式</h2>\n<p>第一性原理是由亞里士多德提出的，他說：每個系統中存在一個最基本的命題，它不能被違背或刪除。聽起來或許有點抽象，但等等我會說明他是什麼意思。另外一種思考方式是歸納法，在生活當中比較常用的思考邏輯。最後一種也是一個演意法</p>\n<div class=\"note info\">\n<ul>\n<li>演繹法是用邏輯來推理問題</li>\n<li>歸納法是根據經驗來解決問題</li>\n</ul>\n</div>\n<p>這邊引用網路上面的例子，如果今天有三位船長看到了冰山。</p>\n<ul>\n<li>\n<p>運用歸納法的船長會說：我上次遇到的冰山在水面下還有一個大冰山，我上上次遇到的冰山也是這樣，泰坦尼克號遇到的冰山也是一樣的，所以這個冰山下面一定也會有一個大冰山，看來我要小心地繞過去。</p>\n</li>\n<li>\n<p>運用第一性原則的船長會說：命題：冰山是會移動的。推理：冰山一定是浮在水中，且根據浮力定律 (物體排開的水會等於它自身的重量), 因此底下有一個更大塊的冰山，故需小心的繞過去。</p>\n</li>\n<li>\n<p>運用歸因法的船長會說：問題：靠近冰山的旁邊會沈船。推理：沈船是因為擦撞到物體，而如果靠近冰山旁邊也會沈船，代表冰山下面是有一塊更大的冰山，故需小心的繞過去。</p>\n</li>\n</ul>\n",
            "tags": [
                "hexo"
            ]
        },
        {
            "id": "http://onon1101.github.io/2023/05/05/web/hexo/no4/",
            "url": "http://onon1101.github.io/2023/05/05/web/hexo/no4/",
            "title": "Step 4. 使用SEO",
            "date_published": "2023-05-05T10:00:35.000Z",
            "content_html": "<h2 id=\"什麼是seo\"><a class=\"markdownIt-Anchor\" href=\"#什麼是seo\">#</a> 什麼是 SEO</h2>\n<p>SEO 的全稱是 Search Engine Optimization (搜索引擎優化), 目的在於能讓 google 搜索到你的網站，如果不使用的話，在 google 上面就沒辦法搜索到你的網站。因此需要挑整設定。</p>\n<h2 id=\"怎麼開始\"><a class=\"markdownIt-Anchor\" href=\"#怎麼開始\">#</a> 怎麼開始</h2>\n<p>首先我們先進入這個<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZWFyY2guZ29vZ2xlLmNvbS9zZWFyY2gtY29uc29sZS9hYm91dA==\">網站</span>。並且選擇只控制子網域的部分。</p>\n<p><img data-src=\"1.jpg\" alt></p>\n<p>然後這邊我們提交 html 的方式。<br>\n把他的 html 下載下來並且放到我們的 hexo  <code>hexo-folder/soure/</code>  資料夾底下，並且我們需要修改裡面的內容。<br>\n<img data-src=\"2.jpg\" alt></p>\n<p>假設你的 html 裡面寫的是…, 此時我們需要增加一個項目。 <code>layout: false</code> , 不然 google 並沒有辦法驗證。</p>\n<figure class=\"highlight txt\"><figcaption data-lang=\"txt\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>google-site-verification: googlec66a365c7dc45f00.html</pre></td></tr></table></figure><figure class=\"highlight txt\"><figcaption data-lang=\"txt\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>---</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>layout: false</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>---</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>google-site-verification: googlec66a365c7dc45f00.html</pre></td></tr></table></figure><p>此時別忘記了</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo cl</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$ hexo g <span class=\"token parameter variable\">-d</span></pre></td></tr></table></figure><p>當做到這裡就可以驗證 google page 了。</p>\n<hr>\n<h2 id=\"sitmap\"><a class=\"markdownIt-Anchor\" href=\"#sitmap\">#</a> sitmap</h2>\n<p>先下載這個</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-generator-sitemap <span class=\"token parameter variable\">--save</span></pre></td></tr></table></figure><p>再來去我們的網頁裡面新增 sitmap, 在這邊我們輸入 sitemap.xml。</p>\n<p><img data-src=\"4.jpg\" alt></p>\n<p>然後我現在做到這一步，後面應該要等他跑了。等一天吧？<br>\n 在我等了 2 個小時之後他就跑出來了。</p>\n<p>而這邊有一個問題是他的 icon 並沒有跑出來，查了一下發現他需要遵守一些規則。</p>\n<p><img data-src=\"3.jpg\" alt></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXJzLmdvb2dsZS5jb20vc2VhcmNoL2RvY3MvYXBwZWFyYW5jZS9mYXZpY29uLWluLXNlYXJjaD92aXNpdF9pZD0yMTY4MzI4MDUyMTQ0Mi04Njg5NjA2MjU4MzUwMDI5Njk5JmFtcDtyZD0xJmFtcDtobD16aC10dw==\">google 的規則</span>寫這樣說。而我們從規則裡面可以看到一方面他須要 html 還有 icon 大小。而我的問題在於大小不符合。因此我們可以調整一下。</p>\n<p>在 shodax 的資料夾裡面 <code>hexo-theme-shokax\\layout\\_partials\\head</code> , 的 head.pug 就可以看的出來。</p>\n<figure class=\"highlight pug\"><figcaption data-lang=\"pug\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\">link<span class=\"token attributes\"><span class=\"token punctuation\">(</span><span class=\"token attr-name\">rel</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\"><span class=\"token string\">\"icon\"</span> type<span class=\"token operator\">=</span><span class=\"token string\">\"image/ico\"</span> sizes<span class=\"token operator\">=</span><span class=\"token string\">\"48x48\"</span> href<span class=\"token operator\">=</span><span class=\"token function\">url_for</span><span class=\"token punctuation\">(</span>theme<span class=\"token punctuation\">.</span><span class=\"token property-access\">statics</span> <span class=\"token operator\">+</span>  theme<span class=\"token punctuation\">.</span><span class=\"token property-access\">assets</span> <span class=\"token operator\">+</span> theme<span class=\"token punctuation\">.</span><span class=\"token property-access\">icon</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">favicon</span></span><span class=\"token punctuation\">)</span></span></span>)</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token flow-control\"><span class=\"token branch keyword\">if</span> theme<span class=\"token punctuation\">.</span><span class=\"token property-access\">icon</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">apple_touch_icon</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\">link<span class=\"token attributes\"><span class=\"token punctuation\">(</span><span class=\"token attr-name\">rel</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\"><span class=\"token string\">\"apple-touch-icon\"</span> sizes<span class=\"token operator\">=</span><span class=\"token string\">\"180x180\"</span> href<span class=\"token operator\">=</span><span class=\"token function\">url_for</span><span class=\"token punctuation\">(</span>theme<span class=\"token punctuation\">.</span><span class=\"token property-access\">statics</span> <span class=\"token operator\">+</span>  theme<span class=\"token punctuation\">.</span><span class=\"token property-access\">assets</span> <span class=\"token operator\">+</span> theme<span class=\"token punctuation\">.</span><span class=\"token property-access\">icon</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">apple_touch_icon</span></span><span class=\"token punctuation\">)</span></span></span>)</pre></td></tr></table></figure><p><img data-src=\"5.jpg\" alt></p>\n<p>至此我在等一下下，順便聊一下為什麼需要更改 icon, 一方面是比較好看，另外一方面可以增加 SSEO 的評分，畢竟網站的分數越高，他的排名會越前面。</p>\n",
            "tags": [
                "hexo"
            ]
        },
        {
            "id": "http://onon1101.github.io/2023/04/08/web/hexo/theme-hexo/",
            "url": "http://onon1101.github.io/2023/04/08/web/hexo/theme-hexo/",
            "title": "Step 3. 給 hexo 套一層酷酷的外皮(shokax)",
            "date_published": "2023-04-08T14:50:35.000Z",
            "content_html": "<h2 id=\"說明\"><a class=\"markdownIt-Anchor\" href=\"#說明\">#</a> 說明</h2>\n<p>預設的 hexo 皮是非常醜的，因此我們可以再原有的基礎上加入 theme, 就能使它變得非常好看。<br>\n我所使用的 theme 是<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3prejA5OC9oZXhvLXRoZW1lLXNob2thWA==\"> hexo-theme-shokaX</span><br>\n 但由於 shokaX 的說明資料非常凌亂，因此這邊會大致統整一下</p>\n<h2 id=\"安裝\"><a class=\"markdownIt-Anchor\" href=\"#安裝\">#</a> 安裝</h2>\n<p>hexo 是可以安裝 theme, 簡單來說就是給他套一層皮。這個皮膚是由四個中國人寫的。然後她的安裝方式跟其他的 theme 可能不太一樣，並不是直接拉到 hexo 的 theme 資料夾就好。我覺得安裝可能不太會有問題，這邊就不細說了。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">npm</span> i shokax-cli <span class=\"token parameter variable\">--location</span><span class=\"token operator\">=</span>global <span class=\"token comment\"># 初始化 init 環境</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$ SXC <span class=\"token function\">install</span> shokaX</pre></td></tr></table></figure><blockquote>\n<p>安裝完成之後應該就可以看到 網頁的風格 有改變了。<br>\n安裝 shokax 的方法跟一般的安裝方式有點不同，不能將 github 的專案直接放進去 <code>./themes/</code>  的資料夾<br>\n他必須用自己的 SXC 安裝套件安裝。</p>\n</blockquote>\n<h2 id=\"設定檔案\"><a class=\"markdownIt-Anchor\" href=\"#設定檔案\">#</a> 設定檔案</h2>\n<p>大部分關於 shokax 的設定檔案都是存在 <code>&lt;hexo&gt;\\node_modules\\hexo-theme-shokax\\_config.yml</code> , 所以設定檔案有兩份，這邊說一下你可能想知道的設定部分。</p>\n<p>其實他的註解都寫得滿清楚了，由這邊可以看到。<br>\n<img data-src=\"142139.jpg\" alt></p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">experiments</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token punctuation\">...</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">fixedCover</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span> <span class=\"token comment\">#這一項修改主頁面背景圖片</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token punctuation\">...</span></pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hexo new page <span class=\"token string\">\"about\"</span> <span class=\"token comment\">#生成 關於網站</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>hexo new page <span class=\"token string\">\"admiration\"</span> <span class=\"token comment\">#生成 關於作者</span></pre></td></tr></table></figure><h2 id=\"_posts\"><a class=\"markdownIt-Anchor\" href=\"#_posts\">#</a> _posts</h2>\n<p>在資料夾底下  <code>./source/</code>  有一個_posts, 這個是專門放置發文的 markdown 檔案，你可以在這邊編寫完成檔案後，會經由 markdown 的編譯器，並發佈到伺服器上。</p>\n<p>網站範例<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FtZWhpbWUvaGV4by10aGVtZS1zaG9rYS90cmVlL21hc3Rlci9leGFtcGxlL3NvdXJjZS9fcG9zdHM=\"> example-for-hexo</span></p>\n<p>這邊交幾個基礎的語法</p>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token title important\">#!./source/*.md</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">---</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>tag: //文章的 Tag</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>cover: //文章的背景圖片</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>title: 早安//標題</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token title important\">date: 2023-04-08//文章的日期</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">---</span></pre></td></tr></table></figure><p>如果在文章裡面要欠入圖片的話，可以在與頁面相同的目錄下開一個名稱相同的資料夾，裡面才存放圖片就可以了。</p>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>!# test.md</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>![](photo.jpg)</pre></td></tr></table></figure><pre><code>...\n|--test.md\n|--test\n   |--photo.jpg\n...\n</code></pre>\n<h2 id=\"_data\"><a class=\"markdownIt-Anchor\" href=\"#_data\">#</a> _data</h2>\n<p>這個我還不知道是什麼，之後在補。</p>\n<h2 id=\"reference\"><a class=\"markdownIt-Anchor\" href=\"#reference\">#</a> Reference</h2>\n<div class=\"links\"><div class=\"item\" title=\"zkz098\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3prejA5OC9oZXhvLXRoZW1lLXNob2thWA==\" data-background-image=\"/assets/404.png\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3prejA5OC9oZXhvLXRoZW1lLXNob2thWA==\">這個是theme 的github</span>\n          <p class=\"desc\">裡面存放著原始文件</p>\n          </div></div><div class=\"item\" title=\"kaitaku\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9kb2NzLmthaXRha3UueHl6L2d1aWRlLw==\" data-background-image=\"/assets/404.png\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9kb2NzLmthaXRha3UueHl6L2d1aWRlLw==\">第一份說明書</span>\n          <p class=\"desc\">裡面只有少少的說明內容</p>\n          </div></div><div class=\"item\" title=\"lostyu\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy8=\" data-background-image=\"/assets/404.png\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy8=\">第二份說明書</span>\n          <p class=\"desc\">裡面的內容就比較詳細了</p>\n          </div></div></div>\n<blockquote>\n<p>PS: 更多的參考資料可以學習 Next 的設定方式，裡面有很多都是類似的。</p>\n</blockquote>\n",
            "tags": [
                "hexo"
            ]
        },
        {
            "id": "http://onon1101.github.io/2023/04/08/web/hexo/use-hexo/",
            "url": "http://onon1101.github.io/2023/04/08/web/hexo/use-hexo/",
            "title": "Step 2. how to use hexo",
            "date_published": "2023-04-08T04:12:30.000Z",
            "content_html": "<h2 id=\"前情提要\"><a class=\"markdownIt-Anchor\" href=\"#前情提要\">#</a> 前情提要</h2>\n<p>上一篇講述了怎麼安裝，現在來說怎麼使用。</p>\n<h1 id=\"指令\"><a class=\"markdownIt-Anchor\" href=\"#指令\">#</a> 指令</h1>\n<h2 id=\"新增文章\"><a class=\"markdownIt-Anchor\" href=\"#新增文章\">#</a> 新增文章</h2>\n<p>! 以下命令都是在 hexo 資料夾中執行。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo new <span class=\"token punctuation\">[</span>layout<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>title<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><blockquote>\n<p>之後可以去到  <code>./source/*.md</code>  裡面就有自己新增的檔案</p>\n</blockquote>\n<h2 id=\"清除垃圾\"><a class=\"markdownIt-Anchor\" href=\"#清除垃圾\">#</a> 清除垃圾</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo clean</pre></td></tr></table></figure><h2 id=\"生成靜態網頁\"><a class=\"markdownIt-Anchor\" href=\"#生成靜態網頁\">#</a> 生成靜態網頁</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo generate</pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo g</pre></td></tr></table></figure><h2 id=\"啟動伺服器\"><a class=\"markdownIt-Anchor\" href=\"#啟動伺服器\">#</a> 啟動伺服器</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo server</pre></td></tr></table></figure><h1 id=\"部屬\"><a class=\"markdownIt-Anchor\" href=\"#部屬\">#</a> 部屬</h1>\n<p>這邊就不贅述要如何把它放到 github 的靜態網站</p>\n<blockquote>\n<p>! 以下命令都是在 hexo 資料夾裡面執行</p>\n</blockquote>\n<h2 id=\"安裝專案放上github的套件\"><a class=\"markdownIt-Anchor\" href=\"#安裝專案放上github的套件\">#</a> 安裝專案放上 Github 的套件</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-deployer-git <span class=\"token parameter variable\">--save</span></pre></td></tr></table></figure><h2 id=\"修改上傳github的設定檔\"><a class=\"markdownIt-Anchor\" href=\"#修改上傳github的設定檔\">#</a> 修改上傳 github 的設定檔</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#! ./_config.yml</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>deploy:</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  type: <span class=\"token function\">git</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  repo: https://github.com/<span class=\"token operator\">&lt;</span>username<span class=\"token operator\">></span>/<span class=\"token operator\">&lt;</span>username<span class=\"token operator\">></span>.github.io.git</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  branch: main //注意這邊要從 master 改成 main</pre></td></tr></table></figure><h2 id=\"開始部屬\"><a class=\"markdownIt-Anchor\" href=\"#開始部屬\">#</a> 開始部屬</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo deploy</pre></td></tr></table></figure><h1 id=\"每一次上傳\"><a class=\"markdownIt-Anchor\" href=\"#每一次上傳\">#</a> 每一次上傳</h1>\n<h2 id=\"部屬指令\"><a class=\"markdownIt-Anchor\" href=\"#部屬指令\">#</a> 部屬指令</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo cl    // 清除之前建立的靜態檔案</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$ hexo g     // 建立靜態頁面</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>$ hexo d     // 部署至 GitHub</pre></td></tr></table></figure><h1 id=\"內容編輯\"><a class=\"markdownIt-Anchor\" href=\"#內容編輯\">#</a> 內容編輯</h1>\n<p>本來我是使用 url 的方式放照片，可缺點是在載入網頁的速度慢，照片顯示受第三方的影響，<br>\n 所以這邊來說一下如何使用本地的方法。</p>\n<p>先安裝一下套件</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> https://github.com/CodeFalling/hexo-asset-image <span class=\"token parameter variable\">--save</span></pre></td></tr></table></figure><p>我們進入_config.yml 設定啟動相對的路徑，把 false 設定為 true</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>post_asset_folder: <span class=\"token boolean\">false</span></pre></td></tr></table></figure><figure class=\"highlight md\"><figcaption data-lang=\"Markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>![](照片的名稱)</pre></td></tr></table></figure><h2 id=\"等待\"><a class=\"markdownIt-Anchor\" href=\"#等待\">#</a> 等待</h2>\n<p>這邊大概等個一，兩分鐘就可以看到這樣的畫面了</p>\n<blockquote>\n<p><code>https://&lt;username&gt;.github.io</code> <br>\n<br><br>\n<img data-src=\"https://i.imgur.com/X0cAUy6.png\" alt></p>\n</blockquote>\n<h1 id=\"reference\"><a class=\"markdownIt-Anchor\" href=\"#reference\">#</a> Reference</h1>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oYWNrbWQuaW8vQEhlaWRpLUxpdS9ub3RlLWhleG8tZ2l0aHVi\">如何安裝 Hexo</span></li>\n</ul>\n",
            "tags": [
                "hexo"
            ]
        },
        {
            "id": "http://onon1101.github.io/2023/04/08/web/hexo/install-hexo/",
            "url": "http://onon1101.github.io/2023/04/08/web/hexo/install-hexo/",
            "title": "Step 1. how to install hexo",
            "date_published": "2023-04-07T21:12:20.000Z",
            "content_html": "<p>為什麼需要 hexo, 並且他的功能是什麼呢。簡單來說，hexo 可以更快速的，並且在維護上也會更方便的一個靜態套件，也可以套入各種的風格。</p>\n<p>而以下會比較粗略的說明要如何安裝 hexo</p>\n<h2 id=\"前置工作\"><a class=\"markdownIt-Anchor\" href=\"#前置工作\">#</a> 前置工作</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub2RlanMub3JnL3poLXR3L2Rvd25sb2Fk\">node.js</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXQtc2NtLmNvbS8=\">git</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL3poLXR3Lw==\">hexo</span></li>\n</ul>\n<h2 id=\"hexo\"><a class=\"markdownIt-Anchor\" href=\"#hexo\">#</a> hexo</h2>\n<ol>\n<li>node 的部分就不贅述，如果有空的話再來補要如何使用 node.js。<br>\n進入 hexo 網頁之後可以看到，一行命令，將他貼到 terminal 並運行他。</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-cli <span class=\"token parameter variable\">-g</span></pre></td></tr></table></figure><ol start=\"2\">\n<li>接下來我們要創建一個有關於 hexo 的資料夾，將來會把所有有關網站的東西都放在 &lt;你的資料夾&gt; 的裡面，你可以選一個風水比較好的資料夾去存放他。</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo init <span class=\"token operator\">&lt;</span>資料夾名稱<span class=\"token operator\">></span></pre></td></tr></table></figure><blockquote>\n<p>其中 &lt;資料夾名稱&gt; 可以更換為你喜歡的名稱<br>\n ex：  <code>hexo init folder</code></p>\n</blockquote>\n<ol start=\"3\">\n<li>初始化作業，我們先進入這個資料夾，並且安裝 npm。</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token builtin class-name\">cd</span> <span class=\"token operator\">&lt;</span>資料夾名稱<span class=\"token operator\">></span></pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span></pre></td></tr></table></figure><p>這樣就完成基本的安裝了</p>\n<h2 id=\"reference\"><a class=\"markdownIt-Anchor\" href=\"#reference\">#</a> Reference</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oYWNrbWQuaW8vQEhlaWRpLUxpdS9ub3RlLWhleG8tZ2l0aHVi\">如何安裝 Hexo</span></li>\n</ul>\n<blockquote>\n<p>所有關於如何安裝 hexo, 以及後續維護的參考資料。</p>\n</blockquote>\n",
            "tags": [
                "hexo"
            ]
        }
    ]
}